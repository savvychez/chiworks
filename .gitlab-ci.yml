image: node:alpine

stages:
  - build
  - test
  - automated-api-tests
  - deploy

variables:
  PYTHON_VERSION: "3.9"  # Adjust as needed

before_script:
  - 'if [ "$CI_JOB_STAGE" = "test" ] && [ "$CI_JOB_NAME" = "run-selenium-integration-tests" ]; then apt-get update -q -y && apt-get install -y python3 python3-dev python3-pip build-essential pkg-config libmariadb-dev wget unzip curl; wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -; echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list; apt-get update -q -y; apt-get install -y google-chrome-stable; else apk add --no-cache python3 python3-dev py3-pip build-base pkgconf mysql-dev; fi'
  - python3 -V  # Python version for debugging
  - pip3 install --upgrade pip  # Upgrade pip
  - cd back-end
  - pip3 install -r requirements.txt  # Install Python dependencies
  - if [ "$CI_JOB_STAGE" = "test" ] && [ "$CI_JOB_NAME" = "run-selenium-integration-tests" ]; then pip3 install --upgrade selenium webdriver_manager; fi  # Install Selenium and webdriver_manager for Selenium tests
  - cd ..

build-frontend-job:
  stage: build
  script:
    - cd front-end
    - npm install
    - npm run build
    - echo "Front-end successfully built"

build-backend-job:
  stage: build
  script:
    - cd back-end
    - npm install -g @aws-amplify/cli
    - amplify build
    - echo "Back-end successfully built"

run-unittests:
  stage: test
  script:
    - echo "Running unittests"
    - cd front-end
    - npm install
    - npm run test
    - cd ..
    - cd back-end
    - python3 -m unittest discover tests  # Run unittests
    - echo "PASSED unittests"
    
run-selenium-integration-tests:
  stage: test
  image: python:3.9  # Using a Python image as base
  services:
    - selenium/standalone-chrome  # Running Selenium as a service
  script:
    - apt-get update -q -y
    - apt-get install -y wget unzip curl  # Added curl here
    - apt-get install -y wget unzip
    - CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`
    - wget -N http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/
    - unzip ~/chromedriver_linux64.zip -d ~/
    - rm ~/chromedriver_linux64.zip
    - mv -f ~/chromedriver /usr/local/bin/chromedriver
    - chmod 0755 /usr/local/bin/chromedriver
    - pip install -r ./back-end/requirements.txt
    - pip install selenium
    - echo "Running selenium integration tests"
    - python3 front-end/selenium_tests.py
    - echo "PASSED integration tests"


deploy:
  stage: deploy
  script:
    - npm install -g @aws-amplify/cli
    - amplify publish --environment dev
  only:
    - develop # Deploy only when changes are pushed to the develop branch

automated-api-tests:
  stage: automated-api-tests
  image: cimg/base:2021.04
  before_script:
    - curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
  script:
    - postman login --with-api-key $POSTMAN_API_KEY
    - postman collection run "29722655-8894f86c-7b37-4809-8b56-9e906f8b6b6f"
